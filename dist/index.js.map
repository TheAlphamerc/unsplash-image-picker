{"version":3,"file":"index.js","sources":["../src/component/modal.tsx","../src/component/picker/photo-card.tsx","../src/component/picker/photo-list.component.tsx","../src/component/picker/search-bar.component.tsx","../src/component/picker/index.tsx","../src/component/picker-modal/picker-modal.tsx"],"sourcesContent":["import cx from 'classnames'\nimport React from 'react'\n\nexport default function Modal({\n  children,\n  className = '',\n  width = 540,\n  padding = true,\n  active = false,\n  setActive = function (_e: any) {},\n  ...props\n}: any): JSX.Element {\n  return (\n    <div\n      onClick={(_e) => {\n        if (active) {\n          setActive(false)\n        } else {\n          setActive(true)\n        }\n      }}\n      onKeyUp={(e) => {\n        if (e.key === 'Escape') {\n          setActive(false)\n        }\n      }}\n      className={cx(`Modal`, {\n        active: active\n      })}\n      {...props}\n    >\n      <Card\n        onClick={(e: any) => {\n          // stop the card being closed when we click on inner divs\n          if (active) {\n            e.stopPropagation()\n          }\n        }}\n        padding={padding}\n        className='overflow-hidden h-full'\n        style={{ maxWidth: width, width: '100%' }}\n      >\n        {children}\n      </Card>\n    </div>\n  )\n}\n\nfunction Card({\n  children,\n  padding = true,\n  className = '',\n  style = {},\n  onClick = (_: any) => {}\n}: any): JSX.Element {\n  return (\n    <div\n      onClick={onClick}\n      style={style}\n      className={cx('Card rounded shadow bg-white mx-auto my-auto', {\n        'p-4': padding\n      })}\n    >\n      {children}\n    </div>\n  )\n}\n","import React from 'react'\n\n/**\n * @description PhotoCard component for UnsplashImagePicker\n * @param {Object} photo - The photo to display.\n * @param {funtion} onPhotoSelect - Function to call when a photo is selected.\n */\nexport default function UnsplashPhotoCard({\n  photo,\n  onPhotoSelect = (_: any) => {}\n}: any) {\n  return (\n    <div\n      className='group relative h-60 sm:h-44 md:h-32 w-full place-items-center object-cover cursor-pointer border theme-border-default'\n      key={photo.id}\n      onClick={() => onPhotoSelect(photo)}\n    >\n      <img\n        className='card-img place-items-center w-full object-cover h-full rounded'\n        src={photo.urls.thumb}\n        alt={photo.alt_description}\n      />\n      <div\n        className='absolute top-0 right-0 left-0 bottom-0 invisible group-hover:visible group-hover:bg-black/20'\n        style={{ color: 'white' }}\n      >\n        <div className='flex space-x-1 items-center place-content-center justify-between m-2'>\n          <div className='flex items-center space-x-1'>\n            <img\n              className='rounded-full h-6 w-6'\n              src={photo.user.profile_image.small}\n              alt={photo.user.username}\n            />\n            <h6 className='text-xs word-breaker'>{photo.user.name}</h6>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport UnsplashPhotoCard from './photo-card'\n\ninterface Props {\n  isLoading?: boolean\n  isLoadingMore?: boolean\n  photoList: Array<any>\n  total?: number | undefined\n  onPhotoSelect: (photo: any) => void\n  loadMore: () => void\n}\nfunction PhotoList({\n  isLoading = false,\n  isLoadingMore = false,\n  photoList,\n  total,\n  onPhotoSelect,\n  loadMore\n}: Props) {\n  const listHeight = '700px' // 'calc(100 - 125px)'\n  const ref = React.useMemo(() => React.createRef<HTMLDivElement>(), [])\n\n  const onScroll = () => {\n    if (ref.current) {\n      const { scrollTop, scrollHeight, clientHeight } = ref.current\n      if (scrollHeight - (scrollTop + clientHeight) < 20) {\n        // Contributors list lazy loading you're at the bottom of the page\n        // do this when we reach end\n        loadMore()\n      }\n    }\n  }\n\n  return (\n    <div className='Body'>\n      {isLoading ? (\n        <div className='flex items-center justify-center h-96'>\n          <Loader />\n        </div>\n      ) : (\n        <div>\n          {Array.isArray(photoList) && photoList.length > 0 && (\n            <div\n              className='PhotoList grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-2 overflow-y-auto p-4'\n              style={{ maxHeight: listHeight }}\n              ref={ref}\n              onScroll={onScroll}\n            >\n              {photoList.map((photo: any) => {\n                return (\n                  <UnsplashPhotoCard\n                    key={photo.id}\n                    photo={photo}\n                    onPhotoSelect={onPhotoSelect}\n                  />\n                )\n              })}\n            </div>\n          )}\n          {Array.isArray(photoList) &&\n            photoList.length === 0 &&\n            total === 0 && (\n              <div className='flex items-center justify-center h-96'>\n                No photos found\n              </div>\n            )}\n          {!total && (\n            <div className='flex items-center justify-center h-96 text-gray-600' />\n          )}\n        </div>\n      )}\n      {isLoadingMore && (\n        <div className='my-4 flex justify-center'>\n          <Loader />\n        </div>\n      )}\n    </div>\n  )\n}\nfunction Loader() {\n  return (\n    <svg\n      className='animate-spin -ml-1 mr-3 h-5 w-5 text-blue'\n      xmlns='http://www.w3.org/2000/svg'\n      fill='none'\n      viewBox='0 0 24 24'\n    >\n      <circle\n        className='opacity-25'\n        cx='12'\n        cy='12'\n        r='10'\n        stroke='currentColor'\n        strokeWidth='4'\n      />\n      <path\n        className='opacity-75'\n        fill='currentColor'\n        d='M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z'\n      />\n    </svg>\n  )\n}\nexport default PhotoList\n","import React from 'react'\n\ninterface Props {\n  query: string\n  setQuery: (query: string) => void\n  onSearch: (query: string) => void\n}\nfunction SearchBar({ setQuery, query, onSearch }: Props) {\n  const searchPhotos = async (e: any) => {\n    e.preventDefault()\n    onSearch(query)\n  }\n\n  return (\n    <div>\n      <div>\n        <form onSubmit={searchPhotos} className='flex items-center space-x-2'>\n          <label className=' w-full'>\n            <input\n              className='placeholder:italic placeholder:theme-text-subtitle-1  w-full border theme-border-default rounded-md py-2 pl-3 pr-3  focus:outline-none focus:theme-border-primary  focus:ring-1 sm:text-sm'\n              placeholder='Search for an image'\n              type='text'\n              name='search'\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n            />\n          </label>\n          <span>\n            {/* <Button label={'Search'} onClick={searchPhotos} /> */}\n            <button\n              className='bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-md'\n              type='submit'\n            >\n              Search\n            </button>\n          </span>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default SearchBar\n","import React from 'react'\nimport { createApi } from 'unsplash-js'\nimport PhotoList from './photo-list.component'\nimport SearchBar from './search-bar.component'\n\ninterface Props {\n  unsplashAccessKey: string\n  initialPhotoSearchQuery?: string\n  onPhotoSelect?: (photo: any) => void\n}\n\n/**\n * @description ImagePicker search image from Unsplash.\n * @param {string} unsplashAccessKey - The unsplash access key.\n * @param {string} initialPhotoSearchQuery - The initial search query.\n * @param {function} onPhotoSelect - Function to call when a photo is selected.\n */\nexport default function ImagePicker({\n  unsplashAccessKey,\n  initialPhotoSearchQuery = '',\n  onPhotoSelect = (_: any) => {}\n}: Props) {\n  const [pics, setPics] = React.useState<any[]>([])\n  const [total, setTotal] = React.useState<number | undefined>()\n  const [query, setQuery] = React.useState('')\n  const [isLoading, setIsLoading] = React.useState(false)\n  const [isLoadingMore, setIsLoadingMore] = React.useState(false)\n  const [page, setPage] = React.useState(1)\n\n  const unsplash = createApi({ accessKey: unsplashAccessKey })\n\n  React.useEffect(() => {\n    if (initialPhotoSearchQuery !== '') {\n      setQuery(initialPhotoSearchQuery)\n      fetchPhotos(1, initialPhotoSearchQuery)\n    }\n  }, [])\n\n  const fetchPhotos = (page: number, text: string, reset = false) => {\n    if (isLoading || isLoadingMore) {\n      return\n    }\n    if (page === 1) {\n      setIsLoading(true)\n    } else {\n      setIsLoadingMore(true)\n    }\n    setPage(page)\n    unsplash.search\n      .getPhotos({\n        page: page,\n        perPage: 30,\n        query: text,\n        orientation: 'landscape'\n      })\n      .then((response: any) => {\n        const newPics = response?.response?.results\n        if (newPics) {\n          let mergedPics = newPics\n          if (!reset) {\n            mergedPics = [...pics, ...newPics]\n          }\n          setPics(mergedPics)\n          setTotal(response.response.total)\n        }\n        setIsLoading(false)\n        setIsLoadingMore(false)\n      })\n  }\n\n  return (\n    <div className='ImagePicker items-center bg-white rounded'>\n      <div className='bg-white '>\n        <div className='Picker relative h-full rounded'>\n          <div className='px-4 pt-4 font-bold text-lg bg-white'>\n            {' '}\n            Search image\n          </div>\n          <div className='shadow p-4 bg-white'>\n            <div className=''>\n              <SearchBar\n                onSearch={(query: string) => {\n                  setPics([])\n                  fetchPhotos(1, query, true)\n                }}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n          </div>\n\n          <PhotoList\n            total={total}\n            photoList={pics}\n            isLoading={isLoading}\n            isLoadingMore={isLoadingMore}\n            loadMore={() => {\n              fetchPhotos(page + 1, query)\n            }}\n            onPhotoSelect={async (photo: any) => {\n              try {\n                // let blob = await fetch(photo.urls.regular).then((r) => r.blob())\n                // let image = await URL.createObjectURL(blob)\n                onPhotoSelect(photo)\n              } catch (error) {\n                console.log(error)\n              }\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Modal from '../modal'\nimport ImagePicker from '../picker'\n\ninterface Props {\n  unsplashAccessKey: any\n  active?: boolean\n  modalWidth?: number\n  modalClassName?: string\n  initialPhotoSearchQuery?: string\n  setActive?: (active: boolean) => void\n  onPhotoSelect?: (photo: any) => void\n}\n\n/**\n * @description ImagePickerModal search image from Unsplash.\n * @param {string} unsplashAccessKey - The unsplash access key.\n * @param {string} initialPhotoSearchQuery - The initial search query.\n * @param {boolean} active - Whether the image picker is active.\n * @param {function} setActive - Function to set the image picker active.\n * @param {function} onPhotoSelect - Function to call when a photo is selected.\n * @param {number} modalWidth - The width of the modal. Default is 840px.\n * @param {string} modalClassName - The classname for the modal.\n */\nexport default function ImagePickerModal({\n  unsplashAccessKey,\n  active = false,\n  initialPhotoSearchQuery = '',\n  setActive = (_: boolean) => {},\n  onPhotoSelect = (_: any) => {},\n  modalWidth = 840,\n  modalClassName = ''\n}: Props) {\n  if (!active) {\n    return null\n  }\n\n  return (\n    <div className=''>\n      <Modal\n        active={active}\n        setActive={setActive}\n        width={`${modalWidth}px`}\n        padding={false}\n        className={modalClassName}\n      >\n        <ImagePicker\n          unsplashAccessKey={unsplashAccessKey}\n          initialPhotoSearchQuery={initialPhotoSearchQuery}\n          onPhotoSelect={onPhotoSelect}\n        />\n      </Modal>\n    </div>\n  )\n}\n"],"names":["Modal","children","width","padding","active","setActive","_e","props","React","onClick","onKeyUp","e","key","className","cx","Card","stopPropagation","style","maxWidth","_","UnsplashPhotoCard","photo","onPhotoSelect","id","src","urls","thumb","alt","alt_description","color","user","profile_image","small","username","name","PhotoList","isLoading","isLoadingMore","photoList","total","loadMore","listHeight","ref","useMemo","createRef","onScroll","current","scrollTop","scrollHeight","clientHeight","Loader","Array","isArray","length","maxHeight","map","xmlns","fill","viewBox","cy","r","stroke","strokeWidth","d","SearchBar","setQuery","query","onSearch","searchPhotos","preventDefault","onSubmit","placeholder","type","value","onChange","target","ImagePicker","unsplashAccessKey","initialPhotoSearchQuery","useState","pics","setPics","setTotal","setIsLoading","setIsLoadingMore","page","setPage","unsplash","createApi","accessKey","useEffect","fetchPhotos","text","reset","search","getPhotos","perPage","orientation","then","response","newPics","results","mergedPics","error","console","log","ImagePickerModal","modalWidth","modalClassName"],"mappings":"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"}