{"version":3,"sources":["../../src/component/modal.tsx","../../src/component/photo-card.tsx","../../src/component/photo-list.component.tsx","../../src/component/search-bar.component.tsx","../../src/component/image-picker.component.tsx","../../src/index.tsx","App.tsx","index.tsx"],"names":["Modal","children","className","width","padding","active","setActive","_e","props","React","onClick","onKeyUp","e","key","cx","Card","stopPropagation","style","maxWidth","_","UnsplashPhotoCard","photo","onPhotoSelect","id","src","urls","thumb","alt","alt_description","color","user","profile_image","small","username","name","PhotoList","isLoading","isLoadingMore","photoList","total","loadMore","ref","useMemo","createRef","Loader","Array","isArray","length","maxHeight","onScroll","current","scrollTop","scrollHeight","clientHeight","map","xmlns","fill","viewBox","cy","r","stroke","strokeWidth","d","SearchBar","setQuery","query","onSearch","searchPhotos","preventDefault","onSubmit","placeholder","type","value","onChange","target","ImagePicker","unsplash","initialPhotoSearchQuery","useState","pics","setPics","setTotal","setIsLoading","setIsLoadingMore","page","setPage","useEffect","fetchPhotos","text","reset","search","getPhotos","perPage","orientation","then","response","newPics","_response$response","results","mergedPics","error","console","log","UnsplashImagePicker","unsplashAccessKey","createApi","accessKey","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.63eda5d1.chunk.js","sourcesContent":["import cx from 'classnames'\nimport React from 'react'\n\nexport default function Modal({\n  children,\n  className = '',\n  width = 540,\n  padding = true,\n  active = false,\n  setActive = function (_e: any) {},\n  ...props\n}: any): JSX.Element {\n  return (\n    <div\n      onClick={(_e) => {\n        if (active) {\n          setActive(false)\n        } else {\n          setActive(true)\n        }\n      }}\n      onKeyUp={(e) => {\n        if (e.key === 'Escape') {\n          setActive(false)\n        }\n      }}\n      className={cx(`Modal`, {\n        active: active\n      })}\n      {...props}\n    >\n      <Card\n        onClick={(e: any) => {\n          // stop the card being closed when we click on inner divs\n          if (active) {\n            e.stopPropagation()\n          }\n        }}\n        padding={padding}\n        className='overflow-hidden h-full'\n        style={{ maxWidth: width, width: '100%' }}\n      >\n        {children}\n      </Card>\n    </div>\n  )\n}\n\nfunction Card({\n  children,\n  padding = true,\n  className = '',\n  style = {},\n  onClick = (_: any) => {}\n}: any): JSX.Element {\n  return (\n    <div\n      onClick={onClick}\n      style={style}\n      className={cx('Card rounded shadow bg-white mx-auto my-auto', {\n        'p-4': padding\n      })}\n    >\n      {children}\n    </div>\n  )\n}\n","import React from 'react'\n\n/**\n * @description PhotoCard component for UnsplashImagePicker\n * @param {Object} photo - The photo to display.\n * @param {funtion} onPhotoSelect - Function to call when a photo is selected.\n */\nexport default function UnsplashPhotoCard({\n  photo,\n  onPhotoSelect = (_: any) => {}\n}: any) {\n  return (\n    <div\n      className='group relative h-60 sm:h-44 md:h-32 w-full place-items-center object-cover cursor-pointer border theme-border-default'\n      key={photo.id}\n      onClick={() => onPhotoSelect(photo)}\n    >\n      <img\n        className='card-img place-items-center w-full object-cover h-full rounded'\n        src={photo.urls.thumb}\n        alt={photo.alt_description}\n      />\n      <div\n        className='absolute top-0 right-0 left-0 bottom-0 invisible group-hover:visible group-hover:bg-black/20'\n        style={{ color: 'white' }}\n      >\n        <div className='flex space-x-1 items-center place-content-center justify-between m-2'>\n          <div className='flex items-center space-x-1'>\n            <img\n              className='rounded-full h-6 w-6'\n              src={photo.user.profile_image.small}\n              alt={photo.user.username}\n            />\n            <h6 className='text-xs word-breaker'>{photo.user.name}</h6>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport UnsplashPhotoCard from './photo-card'\n\ninterface Props {\n  isLoading?: boolean\n  isLoadingMore?: boolean\n  photoList: Array<any>\n  total?: number | undefined\n  onPhotoSelect: (photo: any) => void\n  loadMore: () => void\n}\nfunction PhotoList({\n  isLoading = false,\n  isLoadingMore = false,\n  photoList,\n  total,\n  onPhotoSelect,\n  loadMore\n}: Props) {\n  const listHeight = '700px' // 'calc(100 - 125px)'\n  const ref = React.useMemo(() => React.createRef<HTMLDivElement>(), [])\n\n  const onScroll = () => {\n    if (ref.current) {\n      const { scrollTop, scrollHeight, clientHeight } = ref.current\n      if (scrollHeight - (scrollTop + clientHeight) < 20) {\n        // Contributors list lazy loading you're at the bottom of the page\n        // do this when we reach end\n        loadMore()\n      }\n    }\n  }\n\n  return (\n    <div className='Body'>\n      {isLoading ? (\n        <div className='flex items-center justify-center h-96'>\n          <Loader />\n        </div>\n      ) : (\n        <div>\n          {Array.isArray(photoList) && photoList.length > 0 && (\n            <div\n              className='PhotoList grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-2 overflow-y-auto p-4'\n              style={{ maxHeight: listHeight }}\n              ref={ref}\n              onScroll={onScroll}\n            >\n              {photoList.map((photo: any) => {\n                return (\n                  <UnsplashPhotoCard\n                    key={photo.id}\n                    photo={photo}\n                    onPhotoSelect={onPhotoSelect}\n                  />\n                )\n              })}\n            </div>\n          )}\n          {Array.isArray(photoList) &&\n            photoList.length === 0 &&\n            total === 0 && (\n              <div className='flex items-center justify-center h-96'>\n                No photos found\n              </div>\n            )}\n        </div>\n      )}\n      {isLoadingMore && (\n        <div className='my-4 flex justify-center'>\n          <Loader />\n        </div>\n      )}\n    </div>\n  )\n}\nfunction Loader() {\n  return (\n    <svg\n      className='animate-spin -ml-1 mr-3 h-5 w-5 text-blue'\n      xmlns='http://www.w3.org/2000/svg'\n      fill='none'\n      viewBox='0 0 24 24'\n    >\n      <circle\n        className='opacity-25'\n        cx='12'\n        cy='12'\n        r='10'\n        stroke='currentColor'\n        strokeWidth='4'\n      />\n      <path\n        className='opacity-75'\n        fill='currentColor'\n        d='M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z'\n      />\n    </svg>\n  )\n}\nexport default PhotoList\n","import React from 'react'\n\ninterface Props {\n  query: string\n  setQuery: (query: string) => void\n  onSearch: (query: string) => void\n}\nfunction SearchBar({ setQuery, query, onSearch }: Props) {\n  const searchPhotos = async (e: any) => {\n    e.preventDefault()\n    onSearch(query)\n  }\n\n  return (\n    <div>\n      <div>\n        <form onSubmit={searchPhotos} className='flex items-center space-x-2'>\n          <label className=' w-full'>\n            <input\n              className='placeholder:italic placeholder:theme-text-subtitle-1  w-full border theme-border-default rounded-md py-2 pl-3 pr-3  focus:outline-none focus:theme-border-primary  focus:ring-1 sm:text-sm'\n              placeholder='Search for an image'\n              type='text'\n              name='search'\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n            />\n          </label>\n          <span>\n            {/* <Button label={'Search'} onClick={searchPhotos} /> */}\n            <button\n              className='bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-md'\n              type='submit'\n            >\n              Search\n            </button>\n          </span>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default SearchBar\n","import React from 'react'\nimport Modal from './modal'\n// import Modal from './modal'\nimport PhotoList from './photo-list.component'\nimport SearchBar from './search-bar.component'\n\ninterface Props {\n  unsplash: any\n  active?: boolean\n  initialPhotoSearchQuery?: string\n  setActive?: (active: boolean) => void\n  onPhotoSelect?: (photo: any) => void\n}\n\n/**\n * @description ImagePicker search image from Unsplash.\n * @param {string} initialPhotoSearchQuery - The initial search query.\n * @param {boolean} active - Whether the image picker is active.\n * @param {function} setActive - Function to set the image picker active.\n * @param {function} onPhotoSelect - Function to call when a photo is selected.\n */\nexport default function ImagePicker({\n  unsplash,\n  active = false,\n  initialPhotoSearchQuery = '',\n  setActive = (_: boolean) => {},\n  onPhotoSelect = (_: any) => {}\n}: Props) {\n  if (!active) {\n    return null\n  }\n\n  const [pics, setPics] = React.useState<any[]>([])\n  const [total, setTotal] = React.useState<number | undefined>()\n  const [query, setQuery] = React.useState('')\n  const [isLoading, setIsLoading] = React.useState(false)\n  const [isLoadingMore, setIsLoadingMore] = React.useState(false)\n  const [page, setPage] = React.useState(1)\n\n  React.useEffect(() => {\n    if (initialPhotoSearchQuery !== '') {\n      setQuery(initialPhotoSearchQuery)\n      fetchPhotos(1, initialPhotoSearchQuery)\n    } else {\n      setTotal(0)\n    }\n  }, [initialPhotoSearchQuery])\n\n  const fetchPhotos = (page: number, text: string, reset = false) => {\n    if (isLoading || isLoadingMore) {\n      return\n    }\n    if (page === 1) {\n      setIsLoading(true)\n    } else {\n      setIsLoadingMore(true)\n    }\n    setPage(page)\n    unsplash.search\n      .getPhotos({\n        page: page,\n        perPage: 30,\n        query: text,\n        orientation: 'landscape'\n      })\n      .then((response: any) => {\n        const newPics = response?.response?.results\n        if (newPics) {\n          let mergedPics = newPics\n          if (!reset) {\n            mergedPics = [...pics, ...newPics]\n          }\n          setPics(mergedPics)\n          setTotal(response.response.total)\n        }\n        setIsLoading(false)\n        setIsLoadingMore(false)\n      })\n  }\n\n  return (\n    <div className='ImagePicker flex items-center bg-white rounded'>\n      <Modal\n        active={active}\n        setActive={setActive}\n        width='840px'\n        padding={false}\n        className='bg-white '\n      >\n        <div className='Picker relative h-full rounded'>\n          <div className='px-4 pt-4 font-bold text-lg bg-white'>\n            {' '}\n            Search image\n          </div>\n          <div className='shadow p-4 bg-white'>\n            <div className=''>\n              <SearchBar\n                onSearch={(query: string) => {\n                  setPics([])\n                  fetchPhotos(1, query, true)\n                }}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n          </div>\n\n          <PhotoList\n            total={total}\n            photoList={pics}\n            isLoading={isLoading}\n            isLoadingMore={isLoadingMore}\n            loadMore={() => {\n              fetchPhotos(page + 1, query)\n            }}\n            onPhotoSelect={async (photo: any) => {\n              try {\n                // let blob = await fetch(photo.urls.regular).then((r) => r.blob())\n                // let image = await URL.createObjectURL(blob)\n                onPhotoSelect(photo)\n              } catch (error) {\n                console.log(error)\n              }\n            }}\n          />\n        </div>\n      </Modal>\n    </div>\n  )\n}\n\n// function CreateCommunityModel(props: any) {\n//   return (\n//     <div style={{ width: '100%' }}>\n//       <div className='justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50  outline-none focus:outline-none rounded'>\n//         <div className=' w-3/4 max-w-3x rounded'>{props.children}</div>\n//       </div>\n//       <div\n//         className='opacity-25 fixed inset-0 z-40 bg-black/80'\n//         onClick={() => {\n//           props.setActive(false)\n//         }}\n//       />\n//     </div>\n//   )\n// }\n","import * as React from 'react'\nimport { createApi } from 'unsplash-js'\nimport ImagePicker from './component/image-picker.component'\n\n// export type UnSplashCreateAPI = typeof createApi\ninterface Props {\n  unsplashAccessKey: string\n  active?: boolean\n  initialPhotoSearchQuery?: string\n  setActive?: (active: boolean) => void\n}\n\nexport const UnsplashImagePicker = ({\n  unsplashAccessKey,\n  active = false,\n  initialPhotoSearchQuery,\n  setActive = (_: any) => {}\n}: Props) => {\n  const unsplash = createApi({ accessKey: unsplashAccessKey })\n  return (\n    <ImagePicker\n      active={active}\n      setActive={setActive}\n      unsplash={unsplash}\n      initialPhotoSearchQuery={initialPhotoSearchQuery}\n    />\n  )\n}\n","import React from 'react'\n\nimport { UnsplashImagePicker } from 'unsplash-image-picker'\nimport 'unsplash-image-picker/dist/index.css'\n\nconst App = () => {\n  const [active, setActive] = React.useState(false)\n  const unsplashAccessKey = 'dTUBUnPASfrsKOWYzVpAwvkr9Ks2MuY3i5YCvSqAxWQ'\n  return (\n    <div className='App flex items-center justify-center'>\n      <button\n        className='bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded p-42'\n        onClick={() => {\n          setActive(true)\n        }}\n      >\n        Show Picker\n      </button>\n      <UnsplashImagePicker\n        unsplashAccessKey={unsplashAccessKey}\n        active={active}\n        setActive={setActive}\n        initialPhotoSearchQuery=''\n      />\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}