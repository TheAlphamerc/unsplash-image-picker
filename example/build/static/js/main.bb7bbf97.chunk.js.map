{"version":3,"sources":["../../src/component/modal.tsx","../../src/component/picker/photo-card.tsx","../../src/component/picker/photo-list.component.tsx","../../src/component/picker/search-bar.component.tsx","../../src/component/picker/index.tsx","../../src/component/picker-modal/picker-modal.tsx","component/photo.tsx","App.tsx","index.tsx"],"names":["Modal","children","width","_ref$width","padding","_ref$padding","active","_ref$active","setActive","_e","_ref$setActive","props","React","onClick","onKeyUp","e","key","className","cx","Card","stopPropagation","style","maxWidth","_ref2$padding","_ref2$style","_","_ref2$onClick","UnsplashPhotoCard","photo","onPhotoSelect","_ref$onPhotoSelect","id","src","urls","thumb","alt","alt_description","color","user","profile_image","small","username","name","PhotoList","isLoading","_ref$isLoading","isLoadingMore","_ref$isLoadingMore","photoList","total","loadMore","ref","useMemo","createRef","Loader","Array","isArray","length","maxHeight","onScroll","current","scrollTop","scrollHeight","clientHeight","map","xmlns","fill","viewBox","cy","r","stroke","strokeWidth","d","SearchBar","setQuery","query","onSearch","onSubmit","preventDefault","placeholder","type","value","onChange","target","ImagePicker","unsplashAccessKey","initialPhotoSearchQuery","_ref$initialPhotoSear","useState","pics","setPics","setTotal","setIsLoading","setIsLoadingMore","page","setPage","unsplash","createApi","accessKey","useEffect","fetchPhotos","text","reset","search","getPhotos","perPage","orientation","then","response","newPics","_response$response","results","mergedPics","error","console","log","ImagePickerModal","modalWidth","_ref$modalWidth","modalClassName","_ref$modalClassName","Photo","regular","App","photos","setActivePhotos","process","list","push","index","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bb7bbf97.chunk.js","sourcesContent":["import cx from 'classnames'\nimport React from 'react'\n\nexport default function Modal({\n  children,\n  className = '',\n  width = 540,\n  padding = true,\n  active = false,\n  setActive = function (_e: any) {},\n  ...props\n}: any): JSX.Element {\n  return (\n    <div\n      onClick={(_e) => {\n        if (active) {\n          setActive(false)\n        } else {\n          setActive(true)\n        }\n      }}\n      onKeyUp={(e) => {\n        if (e.key === 'Escape') {\n          setActive(false)\n        }\n      }}\n      className={cx(`Modal`, {\n        active: active\n      })}\n      {...props}\n    >\n      <Card\n        onClick={(e: any) => {\n          // stop the card being closed when we click on inner divs\n          if (active) {\n            e.stopPropagation()\n          }\n        }}\n        padding={padding}\n        className='overflow-hidden h-full'\n        style={{ maxWidth: width, width: '100%' }}\n      >\n        {children}\n      </Card>\n    </div>\n  )\n}\n\nfunction Card({\n  children,\n  padding = true,\n  className = '',\n  style = {},\n  onClick = (_: any) => {}\n}: any): JSX.Element {\n  return (\n    <div\n      onClick={onClick}\n      style={style}\n      className={cx('Card rounded shadow bg-white mx-auto my-auto', {\n        'p-4': padding\n      })}\n    >\n      {children}\n    </div>\n  )\n}\n","import React from 'react'\n\n/**\n * @description PhotoCard component for UnsplashImagePicker\n * @param {Object} photo - The photo to display.\n * @param {funtion} onPhotoSelect - Function to call when a photo is selected.\n */\nexport default function UnsplashPhotoCard({\n  photo,\n  onPhotoSelect = (_: any) => {}\n}: any) {\n  return (\n    <div\n      className='group relative h-60 sm:h-44 md:h-32 w-full place-items-center object-cover cursor-pointer border theme-border-default'\n      key={photo.id}\n      onClick={() => onPhotoSelect(photo)}\n    >\n      <img\n        className='card-img place-items-center w-full object-cover h-full rounded'\n        src={photo.urls.thumb}\n        alt={photo.alt_description}\n      />\n      <div\n        className='absolute top-0 right-0 left-0 bottom-0 invisible group-hover:visible group-hover:bg-black/20'\n        style={{ color: 'white' }}\n      >\n        <div className='flex space-x-1 items-center place-content-center justify-between m-2'>\n          <div className='flex items-center space-x-1'>\n            <img\n              className='rounded-full h-6 w-6'\n              src={photo.user.profile_image.small}\n              alt={photo.user.username}\n            />\n            <h6 className='text-xs word-breaker'>{photo.user.name}</h6>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport UnsplashPhotoCard from './photo-card'\n\ninterface Props {\n  isLoading?: boolean\n  isLoadingMore?: boolean\n  photoList: Array<any>\n  total?: number | undefined\n  onPhotoSelect: (photo: any) => void\n  loadMore: () => void\n}\nfunction PhotoList({\n  isLoading = false,\n  isLoadingMore = false,\n  photoList,\n  total,\n  onPhotoSelect,\n  loadMore\n}: Props) {\n  const listHeight = '700px' // 'calc(100 - 125px)'\n  const ref = React.useMemo(() => React.createRef<HTMLDivElement>(), [])\n\n  const onScroll = () => {\n    if (ref.current) {\n      const { scrollTop, scrollHeight, clientHeight } = ref.current\n      if (scrollHeight - (scrollTop + clientHeight) < 20) {\n        // Contributors list lazy loading you're at the bottom of the page\n        // do this when we reach end\n        loadMore()\n      }\n    }\n  }\n\n  return (\n    <div className='Body'>\n      {isLoading ? (\n        <div className='flex items-center justify-center h-96'>\n          <Loader />\n        </div>\n      ) : (\n        <div>\n          {Array.isArray(photoList) && photoList.length > 0 && (\n            <div\n              className='PhotoList grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-2 overflow-y-auto p-4 pb-12'\n              style={{ maxHeight: listHeight }}\n              ref={ref}\n              onScroll={onScroll}\n            >\n              {photoList.map((photo: any) => {\n                return (\n                  <UnsplashPhotoCard\n                    key={photo.id}\n                    photo={photo}\n                    onPhotoSelect={onPhotoSelect}\n                  />\n                )\n              })}\n              {isLoadingMore && (\n                <div className='sm:col-span-2 md:col-span-3 my-4 flex justify-center'>\n                  <Loader />\n                </div>\n              )}\n            </div>\n          )}\n          {Array.isArray(photoList) &&\n            photoList.length === 0 &&\n            total === 0 && (\n              <div className='flex items-center justify-center h-96'>\n                No photos found\n              </div>\n            )}\n          {!total && (\n            <div className='flex items-center justify-center h-96 text-gray-600' />\n          )}\n        </div>\n      )}\n    </div>\n  )\n}\nfunction Loader() {\n  return (\n    <svg\n      className='animate-spin -ml-1 mr-3 h-5 w-5 text-blue'\n      xmlns='http://www.w3.org/2000/svg'\n      fill='none'\n      viewBox='0 0 24 24'\n    >\n      <circle\n        className='opacity-25'\n        cx='12'\n        cy='12'\n        r='10'\n        stroke='currentColor'\n        strokeWidth='4'\n      />\n      <path\n        className='opacity-75'\n        fill='currentColor'\n        d='M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z'\n      />\n    </svg>\n  )\n}\nexport default PhotoList\n","import React from 'react'\n\ninterface Props {\n  query: string\n  setQuery: (query: string) => void\n  onSearch: (query: string) => void\n}\nfunction SearchBar({ setQuery, query, onSearch }: Props) {\n  const searchPhotos = async (e: any) => {\n    e.preventDefault()\n    onSearch(query)\n  }\n\n  return (\n    <div>\n      <div>\n        <form onSubmit={searchPhotos} className='flex items-center space-x-2'>\n          <label className=' w-full'>\n            <input\n              className='placeholder:italic placeholder:theme-text-subtitle-1  w-full border theme-border-default rounded-md py-2 pl-3 pr-3  focus:outline-none focus:theme-border-primary  focus:ring-1 sm:text-sm'\n              placeholder='Search for an image'\n              type='text'\n              name='search'\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n            />\n          </label>\n          <span>\n            {/* <Button label={'Search'} onClick={searchPhotos} /> */}\n            <button\n              className='bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-md'\n              type='submit'\n            >\n              Search\n            </button>\n          </span>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default SearchBar\n","import React from 'react'\nimport { createApi } from 'unsplash-js'\nimport PhotoList from './photo-list.component'\nimport SearchBar from './search-bar.component'\n\ninterface Props {\n  unsplashAccessKey: string\n  initialPhotoSearchQuery?: string\n  onPhotoSelect?: (photo: any) => void\n}\n\n/**\n * @description ImagePicker search image from Unsplash.\n * @param {string} unsplashAccessKey - The unsplash access key.\n * @param {string} initialPhotoSearchQuery - The initial search query.\n * @param {function} onPhotoSelect - Function to call when a photo is selected.\n */\nexport default function ImagePicker({\n  unsplashAccessKey,\n  initialPhotoSearchQuery = '',\n  onPhotoSelect = (_: any) => {}\n}: Props) {\n  const [pics, setPics] = React.useState<any[]>([])\n  const [total, setTotal] = React.useState<number | undefined>()\n  const [query, setQuery] = React.useState('')\n  const [isLoading, setIsLoading] = React.useState(false)\n  const [isLoadingMore, setIsLoadingMore] = React.useState(false)\n  const [page, setPage] = React.useState(1)\n\n  const unsplash = createApi({ accessKey: unsplashAccessKey })\n\n  React.useEffect(() => {\n    if (initialPhotoSearchQuery !== '') {\n      setQuery(initialPhotoSearchQuery)\n      fetchPhotos(1, initialPhotoSearchQuery)\n    }\n  }, [])\n\n  const fetchPhotos = (page: number, text: string, reset = false) => {\n    if (isLoading || isLoadingMore) {\n      return\n    }\n    if (page === 1) {\n      setIsLoading(true)\n    } else {\n      setIsLoadingMore(true)\n    }\n    setPage(page)\n    unsplash.search\n      .getPhotos({\n        page: page,\n        perPage: 30,\n        query: text,\n        orientation: 'landscape'\n      })\n      .then((response: any) => {\n        const newPics = response?.response?.results\n        if (newPics) {\n          let mergedPics = newPics\n          if (!reset) {\n            mergedPics = [...pics, ...newPics]\n          }\n          setPics(mergedPics)\n          setTotal(response.response.total)\n        }\n        setIsLoading(false)\n        setIsLoadingMore(false)\n      })\n  }\n\n  return (\n    <div className='ImagePicker items-center bg-white rounded'>\n      <div className='bg-white '>\n        <div className='Picker relative h-full rounded'>\n          <div className='px-4 pt-4 font-bold text-lg bg-white '>\n            {' '}\n            Search image\n          </div>\n          <div className='shadow p-4 bg-white'>\n            <div className=''>\n              <SearchBar\n                onSearch={(query: string) => {\n                  setPics([])\n                  fetchPhotos(1, query, true)\n                }}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n          </div>\n\n          <PhotoList\n            total={total}\n            photoList={pics}\n            isLoading={isLoading}\n            isLoadingMore={isLoadingMore}\n            loadMore={() => {\n              fetchPhotos(page + 1, query)\n            }}\n            onPhotoSelect={async (photo: any) => {\n              try {\n                // let blob = await fetch(photo.urls.regular).then((r) => r.blob())\n                // let image = await URL.createObjectURL(blob)\n                onPhotoSelect(photo)\n              } catch (error) {\n                console.log(error)\n              }\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Modal from '../modal'\nimport ImagePicker from '../picker'\n\ninterface Props {\n  unsplashAccessKey: any\n  active?: boolean\n  modalWidth?: number\n  modalClassName?: string\n  initialPhotoSearchQuery?: string\n  setActive?: (active: boolean) => void\n  onPhotoSelect?: (photo: any) => void\n}\n\n/**\n * @description ImagePickerModal search image from Unsplash.\n * @param {string} unsplashAccessKey - The unsplash access key.\n * @param {string} initialPhotoSearchQuery - The initial search query.\n * @param {boolean} active - Whether the image picker is active.\n * @param {function} setActive - Function to set the image picker active.\n * @param {function} onPhotoSelect - Function to call when a photo is selected.\n * @param {number} modalWidth - The width of the modal. Default is 840px.\n * @param {string} modalClassName - The classname for the modal.\n */\nexport default function ImagePickerModal({\n  unsplashAccessKey,\n  active = false,\n  initialPhotoSearchQuery = '',\n  setActive = (_: boolean) => {},\n  onPhotoSelect = (_: any) => {},\n  modalWidth = 840,\n  modalClassName = ''\n}: Props) {\n  if (!active) {\n    return null\n  }\n\n  return (\n    <div className=''>\n      <Modal\n        active={active}\n        setActive={setActive}\n        width={`${modalWidth}px`}\n        padding={false}\n        className={modalClassName}\n      >\n        <ImagePicker\n          unsplashAccessKey={unsplashAccessKey}\n          initialPhotoSearchQuery={initialPhotoSearchQuery}\n          onPhotoSelect={onPhotoSelect}\n        />\n      </Modal>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function Photo({ photo }: any) {\n  console.log(photo)\n  return (\n    <img\n      src={photo.urls.regular}\n      alt={photo.alt_description}\n      className='sm:h-72 sm:w-full lg:h-52 object-cover rounded border  shadow-md'\n    />\n  )\n}\n","import React from 'react'\n\nimport 'unsplash-image-picker/dist/index.css'\nimport UnsplashImagePickerModal from 'unsplash-image-picker'\nimport Photo from './component/photo'\n\n// type ControlProps = React.PropsWithChildren<{setVisible: (status: boolean) => void}>\n\nconst App = () => {\n  const [active, setActive] = React.useState(false)\n  const [photos, setActivePhotos] = React.useState<any[]>([])\n  const unsplashAccessKey = process.env.REACT_APP_UNSPLASH_ACCESS_KEY\n  console.log(unsplashAccessKey)\n  return (\n    <div className='App flex flex-col item-start justify-center bg-gray-50'>\n      <div className='flex flex-col items-center space-y-4 p-4 sm:p-0 '>\n        <button\n          className='button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded p-42 h-12'\n          onClick={() => {\n            setActive(true)\n          }}\n        >\n          Search image\n        </button>\n        <UnsplashImagePickerModal\n          unsplashAccessKey={unsplashAccessKey}\n          active={active}\n          setActive={setActive}\n          initialPhotoSearchQuery=''\n          onPhotoSelect={(photo: any) => {\n            let list = (photos ?? []) as any[]\n            list.push(photo)\n            setActivePhotos(list)\n            setActive(false)\n          }}\n        />\n        <div className='grid grid-cols-1 gap-3 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 justify-center overflow-auto'>\n          {photos?.map((photo: any, index: number) => (\n            <Photo photo={photo} key={index} />\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}